{"version":3,"sources":["api/api.js","api/posts.js","components/DetailsPost/DetailsPost.jsx","components/AddPost/AddPost.jsx","components/PostList/PostList.jsx","App.js","index.js"],"names":["BASE_URL","getData","endPoint","a","fetch","response","ok","Error","status","statusText","json","result","deletePost","postId","url","id","method","addPost","body","headers","JSON","stringify","post","then","DetailsPost","selectedPostId","useState","posts","setPosts","loadInfo","postsFromServer","useEffect","className","title","comments","map","comment","AddPost","setTitle","setBody","changeInputValue","value","callback","onSubmit","event","preventDefault","type","name","placeholder","required","onChange","target","PostList","match","setComments","params","loadPosts","loadComments","commentsFromServer","onClick","filter","to","path","exact","currentList","render","App","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8aff6b14.chunk.js","sourcesContent":["export const BASE_URL = 'https://bloggy-api.herokuapp.com/';\n\nexport const getData = async(endPoint) => {\n  const response = await fetch(`${BASE_URL}${endPoint}`);\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  const result = await response.json();\n\n  return result;\n};\n\nexport const remove = (url, id) => {\n  return fetch(`${BASE_URL}${url}/${id}`, {\n    method: 'DELETE',\n  });\n}\n\nexport const post = (url, body) => {\n  return fetch(`${BASE_URL}${url}`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(body),\n  });\n}","import { remove, post } from './api';\n\nconst endPoint = 'posts';\n\nexport const deletePost = (postId) => {\n  return remove(endPoint, postId);\n}\n\nexport const addPost = (body) => {\n  return post(endPoint, body)\n    .then(response => response.json())\n}","import './DetailsPost.css'\nimport { getData } from '../../api/api'\nimport { useEffect, useState } from 'react';\n\nexport function DetailsPost({ selectedPostId }) {\n  const [posts, setPosts] = useState([]);\n\n  const loadInfo = async() => {\n    const postsFromServer = await getData(`posts/${selectedPostId}?_embed=comments`);\n\n    setPosts(postsFromServer);\n  };\n\n  useEffect(() => {\n    loadInfo();\n\n    return () => {\n      setPosts([])\n    }\n  }, [selectedPostId])\n\n  return (\n    <div className=\"DetailsPost\">\n      <h2>\n        {posts.title}\n      </h2>\n      <div>\n        {posts.body}\n      </div>\n      <div className=\"comments\">\n        <h2>Comments:</h2>\n        <ul className=\"DetailsPost__list\">\n          {posts.comments && posts.comments.map(comment => (\n            <li \n              key={comment.id}\n              className=\"DetailsPost__item\"\n            >\n              <div>\n                {comment.body}\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import { useState } from \"react\";\n\nexport function AddPost({ addPost }) {\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n\n  const addNewPost = () => {\n    addPost(title, body);\n\n    setTitle('');\n    setBody('');\n  };\n\n  const changeInputValue = (value, callback) => {\n    callback(value);\n  };\n\n  return (\n    <form\n      onSubmit={(event) => {\n        event.preventDefault();\n        addNewPost();\n      }}\n    >\n     <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Input title\"\n          required\n          value={title}\n          onChange={(event) => {\n            changeInputValue(event.target.value, setTitle);\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Input text for your post\"\n          required\n          value={body}\n          onChange={(event) => {\n            changeInputValue(event.target.value, setBody);\n          }}\n        />\n      </div>\n      <button\n        type=\"submit\"\n        className=\"btn\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n}\n","import { getData } from '../../api/api';\nimport { deletePost, addPost} from '../../api/posts';\nimport { useEffect, useState } from 'react';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { DetailsPost } from '../DetailsPost'\nimport './PostList.css';\nimport { AddPost } from '../AddPost';\n\nexport function PostList({match}) {\n  const [posts, setPosts] = useState([]);\n  const [comments, setComments] = useState([]);\n  const selectedPostId = +match.params.postId;\n\n  const loadPosts = async() => {\n    const postsFromServer = await getData('posts');\n\n    setPosts(postsFromServer);\n  };\n\n  const loadComments = async() => {\n    const commentsFromServer = await getData('comments');\n\n    setComments(commentsFromServer);\n  };\n\n  const addNewPost = (title, body) => {\n    const newPost = {\n      title,\n      body,\n    };\n    addPost(newPost)\n      .then((result) => {\n        setPosts(currentList => [...currentList, result]);\n      });\n  };\n\n  \n\n  useEffect(() => {\n    loadPosts();\n    loadComments();\n  }, []);\n\n  return (\n    <div className=\"PostList\">\n      <ul className=\"PostList__list\">\n        {posts.map(post => (\n          <li\n            className=\"PostList__item\" \n            key={post.id}\n          >\n            <h2>{post.title}</h2>\n            <p>{post.body}</p>\n            <button\n              name={post.id}\n              type=\"button\"\n              className=\"PostList__btn btn\"\n              onClick={({target}) => {\n                deletePost(target.name)\n                setPosts(posts.filter(post => post.id !== +target.name));\n              }}\n            >\n              Delete post\n            </button>\n            <Link\n              name={post.id}\n              className=\"PostList__btn btn\"\n              to={`/posts/${post.id}`}\n            >\n              Post details\n            </Link>\n            <Link\n              className=\"PostList__btn btn\"\n              to={`/posts/addPost`}\n            >\n              Creat post\n            </Link>\n          </li>\n        ))}\n      </ul>\n\n      <Route\n        path=\"/posts/addPost\"\n        exact\n      >\n        <AddPost\n          addPost={addNewPost}\n        />\n      </Route>\n      <Route\n        path={`/posts/${selectedPostId}`}\n        render={() => {\n          return <DetailsPost \n            selectedPostId={selectedPostId} \n          />\n        }}\n      >\n      </Route>\n\n\n    </div>\n  );\n}\n","import { Route, Redirect} from 'react-router-dom';\nimport { PostList } from './components/PostList';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Redirect\n        path=\"/\"\n        to=\"/posts\"\n      />\n      <Route \n        path=\"/posts/:postId?\"\n        component={PostList}\n      >\n      </Route>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}