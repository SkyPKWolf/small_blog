{"version":3,"sources":["api/api.js","components/DetailsPost/DetailsPost.jsx","api/comments.js","components/AddPost/AddPost.jsx","components/UpdatePost/UpdatePost.jsx","api/posts.js","components/PostList/PostList.jsx","App.js","index.js"],"names":["BASE_URL","getData","endPoint","a","fetch","response","ok","Error","status","statusText","json","result","post","url","body","method","headers","JSON","stringify","DetailsPost","selectedPostId","useState","setPost","setBody","comments","setComments","error","setError","loadInfo","postFromServer","addNewComment","newComment","postId","length","then","addComment","currentList","useEffect","className","title","map","comment","id","onSubmit","event","preventDefault","name","placeholder","required","value","onChange","callback","target","type","AddPost","addPost","setTitle","changeInputValue","trim","UpdatePost","updatePost","defaultValue","deletePost","put","PostList","match","posts","setPosts","params","loadPosts","postsFromServer","loadComments","commentsFromServer","updatedPost","postID","onClick","filter","to","path","exact","render","App","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ca746b41.chunk.js","sourcesContent":["export const BASE_URL = 'https://bloggy-api.herokuapp.com/';\n\nexport const getData = async(endPoint) => {\n  const response = await fetch(`${BASE_URL}${endPoint}`);\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  const result = await response.json();\n\n  return result;\n};\n\nexport const remove = (url, id) => {\n  return fetch(`${BASE_URL}${url}/${id}`, {\n    method: 'DELETE',\n  });\n}\n\nexport const post = (url, body) => {\n  return fetch(`${BASE_URL}${url}`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(body),\n  });\n}\n\nexport const put = (url, body) => {\n  return fetch(`${BASE_URL}${url}`, {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(body),\n  });\n}","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types'; \n\nimport { getData } from '../../api/api'\nimport { addComment } from '../../api/comments'\n\nimport './DetailsPost.css'\n \nexport function DetailsPost({ selectedPostId }) {\n  const [post, setPost] = useState([]);\n  const [body, setBody] = useState('');\n  const [comments, setComments] = useState([]);\n  const [error, setError] = useState(false);\n\n  const loadInfo = async() => {\n    const postFromServer = await getData(`posts/${selectedPostId}?_embed=comments`);\n\n    setPost(postFromServer);\n    setComments(postFromServer.comments);\n  };\n\n  const changeInputValue = (value, callback) => {\n    setError(false);\n    callback(value);\n  };\n\n  const addNewComment = () => {\n    const newComment = {\n      postId: selectedPostId,\n      body,\n    };\n    if(body.length > 3) {\n      addComment(newComment)\n        .then((result) => {\n          setComments(currentList => [...currentList, result]);\n        });\n\n      setBody('');\n    } else {\n      setError(true);\n    }\n  };\n\n  useEffect(() => {\n    loadInfo();\n  }, [selectedPostId]);\n\n  return (\n    <div className=\"DetailsPost\">\n      <h2>\n        {post.title}\n      </h2>\n      <div>\n        {post.body}\n      </div>\n      <div className=\"comments\">\n        <h2>Comments:</h2>\n        <ul className=\"DetailsPost__list\">\n          {comments && comments.map(comment => (\n            <li \n              key={comment.id}\n              className=\"DetailsPost__item\"\n            >\n              <div>\n                {comment.body}\n              </div>\n            </li>\n          ))}\n        </ul>\n        <form\n          className=\"Form comment\"\n          onSubmit={(event) => {\n            event.preventDefault();\n            addNewComment();\n          }}\n        >\n          <div className=\"Form__field\">\n            <textarea\n              className=\"Form__input\"\n              name=\"body\"\n              placeholder=\"Input your comment\"\n              required\n              value={body}\n              onChange={(event) => {\n                changeInputValue(event.target.value, setBody);\n              }}\n            />\n          </div>\n          {error && <p\n            className=\"Form__errorMassage\" \n          >\n            Input more 3 characters\n          </p>}\n          <button\n            type=\"submit\"\n            className=\"btn\"\n          >\n            Add comment\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\n\nDetailsPost.propTypes = {\n  selectedPostId: PropTypes.number.isRequired\n}","import { post } from './api';\n\nconst endPoint = 'comments';\n\nexport const addComment = (body) => {\n  return post(endPoint, body)\n    .then(response => response.json())\n}\n\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\"\n\nimport './AddPost.css'\n\nexport function AddPost({ addPost }) {\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [error, setError] = useState(false);\n\n  const addNewPost = () => {\n    if(title.trim().length > 3 && body.trim().length > 3) {\n      addPost(title, body);\n\n      setTitle('');\n      setBody('');\n    } else {\n      setError(true);\n    }\n  };\n\n  const changeInputValue = (value, callback) => {\n    setError(false);\n    callback(value);\n  };\n\n  return (\n    <form\n      className=\"Form\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        addNewPost();\n      }}\n    >\n      <div className=\"Form__field\">\n        <input\n          className=\"Form__input\"\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          placeholder=\"Input title\"\n          required\n          onChange={(event) => {\n            changeInputValue(event.target.value, setTitle);\n          }}\n        />\n      </div>\n      <div className=\"Form__field\">\n        <textarea\n          className=\"Form__input\"\n          name=\"body\"\n          placeholder=\"Input text for your post\"\n          required\n          value={body}\n          onChange={(event) => {\n            changeInputValue(event.target.value, setBody);\n          }}\n        />\n      </div>\n      {error && <p\n        className=\"Form__errorMassage\" \n      >\n        Enter more than 3 characters\n      </p>}\n      <button\n        type=\"submit\"\n        className=\"btn\"\n      >\n        Add post\n      </button>\n    </form>\n  );\n}\n\n\nAddPost.propTypes = {\n  addPost: PropTypes.func.isRequired,\n}","import { useEffect, useState } from \"react\";\nimport PropTypes from 'prop-types'; \n\nimport { getData } from '../../api/api';\n\nimport './UpdatePost.css';\n\nexport function UpdatePost({ updatePost, selectedPostId }) {\n\n  const [post, setPost] = useState([])\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n\n  const loadInfo = async() => {\n    const postFromServer = await getData(`posts/${selectedPostId}`);\n\n    setPost(postFromServer);\n  };\n\n  const updatedPost = () => {\n    updatePost(title, body);\n  };\n\n  useEffect(() => {\n    loadInfo();\n  }, [selectedPostId])\n\n  useEffect(() => {\n    setTitle(post.title);\n    setBody(post.body);\n  }, [post])\n\n  const changeInputValue = (value, callback) => {\n    callback(value);\n  };\n\n  return (\n    <form\n      className=\"Form\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        updatedPost();\n      }}\n    >\n     <div className=\"Form__field\">\n        <input\n          className=\"Form__input\"\n          type=\"text\"\n          name=\"title\"\n          defaultValue={title}\n          placeholder=\"Input title\"\n          required\n          onChange={(event) => {\n            changeInputValue(event.target.value, setTitle);\n          }}\n        />\n      </div>\n\n      <div className=\"Form__field\">\n        <textarea\n          className=\"Form__input\"\n          name=\"body\"\n          placeholder=\"Input text for your post\"\n          required\n          defaultValue={body}\n          onChange={(event) => {\n            changeInputValue(event.target.value, setBody);\n          }}\n        />\n      </div>\n      <button\n        type=\"submit\"\n        className=\"btn\"\n      >\n        Update Post\n      </button>\n    </form>\n  );\n}\n\nUpdatePost.propTypes = {\n  updatePost: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.number.isRequired\n}","import { remove, post, put } from './api';\n\nconst endPoint = 'posts';\n\nexport const deletePost = (postId) => {\n  return remove(endPoint, postId);\n}\n\nexport const addPost = (body) => {\n  return post(endPoint, body)\n    .then(response => response.json())\n}\n\nexport const updatePost = (body, postId) => {\n  return put(`${endPoint}/${postId}`, body)\n    .then(response => response.json())\n}","import { useEffect, useState } from 'react';\nimport { Link, Route } from 'react-router-dom';\n\nimport { DetailsPost } from '../DetailsPost'\nimport { AddPost } from '../AddPost';\nimport { UpdatePost } from '../UpdatePost'\n\nimport { getData } from '../../api/api';\nimport { deletePost, addPost, updatePost} from '../../api/posts';\n\nimport './PostList.css';\n \nexport function PostList({ match }) {\n  const [posts, setPosts] = useState([]);\n  const [comments, setComments] = useState([]);\n  const selectedPostId = +match.params.postId;\n\n  const loadPosts = async() => {\n    const postsFromServer = await getData('posts');\n\n    setPosts(postsFromServer);\n  };\n\n  const loadComments = async() => {\n    const commentsFromServer = await getData('comments');\n\n    setComments(commentsFromServer);\n  };\n\n  const addNewPost = (title, body) => {\n    const newPost = {\n      title,\n      body,\n    };\n\n    addPost(newPost)\n      .then((result) => {\n        setPosts(currentList => [...currentList, result]);\n      });\n  };\n\n  const updatedPost = (title, body) => {\n    const newPost = {\n      title,\n      body,\n    };\n\n    updatePost(newPost, selectedPostId)\n      .then((result) => {\n        const postID = selectedPostId;\n        setPosts(posts.map((post) => {      \n          if(post.id === postID) {\n            return result;\n          }\n\n          return post;\n        }));\n      });\n  };\n\n  useEffect(() => {\n    loadPosts();\n    loadComments();\n  }, []);\n\n  return (\n    <div className=\"PostList\">\n      <ul className=\"PostList__list\">\n        {posts.map(post => (\n          <li\n            className=\"PostList__item\" \n            key={post.id}\n          >\n            <h2>{post.title}</h2>\n            <p>{post.body}</p>\n            <button\n              name={post.id}\n              type=\"button\"\n              className=\"PostList__btn btn\"\n              onClick={({target}) => {\n                deletePost(target.name)\n                setPosts(posts.filter(post => post.id !== +target.name));\n              }}\n            >\n              Delete post\n            </button>\n            <Link\n              className=\"PostList__btn btn\"\n              to={`/posts/${post.id}`}\n            >\n              Post details\n            </Link>\n            <Link\n              className=\"PostList__btn btn\"\n              to={`/posts/${post.id}/updatePost`}\n            >\n              Update Post\n            </Link>\n          </li>\n        ))}\n      </ul>\n\n      <Route\n        path=\"/posts/addPost\"\n        exact\n      >\n        <AddPost\n          addPost={addNewPost}\n        />\n      </Route>\n      <Route\n        path={`/posts/${selectedPostId}/updatePost`}\n        exact\n        render={() => {\n          return <UpdatePost \n            selectedPostId={selectedPostId}\n            updatePost={updatedPost} \n          />\n        }}\n      >\n      </Route>\n      <Route\n        path={`/posts/${selectedPostId}`}\n        exact\n        render={() => {\n          return <DetailsPost \n            selectedPostId={selectedPostId} \n          />\n        }}\n      >\n      </Route>\n    </div>\n  );\n}\n","import { Route, Link, Redirect, Switch} from 'react-router-dom';\n\nimport { PostList } from './components/PostList';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n      <h1>Posts:</h1>\n      <Link\n        className=\"PostList__btn btn\"\n        to={`/posts/addPost`}\n      >\n        Create post\n      </Link>\n      <div className=\"App\">\n        <Switch>\n          <Redirect\n            path=\"/\"\n            exact\n            to=\"/posts\"\n          />\n          <Route \n            path=\"/posts/:postId?\"\n            component={PostList}\n          >\n          </Route>\n        </Switch>\n\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}