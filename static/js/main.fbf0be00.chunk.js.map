{"version":3,"sources":["api/api.js","api/posts.js","components/DetailsPost/DetailsPost.jsx","components/PostList/PostList.jsx","App.js","index.js"],"names":["BASE_URL","getData","endPoint","a","fetch","response","ok","Error","status","statusText","json","result","deletePost","postId","url","id","method","DetailsPost","selectedPost","comments","useEffect","console","log","className","title","body","map","comment","PostList","useState","posts","setPosts","setComments","selectedPostId","setSelectedPostId","loadPosts","postsFromServer","loadComments","commentsFromServer","post","name","type","onClick","target","filter","to","path","render","prepearedPost","prepearedComments","App","component","ReactDOM","document","getElementById"],"mappings":"yQAAaA,EAAW,oCAEXC,EAAO,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,sEACEC,MAAM,GAAD,OAAIJ,GAAJ,OAAeE,IADtB,WACfG,EADe,QAEPC,GAFO,sBAGb,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAH9B,uBAMAJ,EAASK,OANT,cAMfC,EANe,yBAQdA,GARc,2CAAH,sDCAdT,EAAW,QAEJU,EAAa,SAACC,GACzB,ODQqBC,ECRPZ,EDQYa,ECRFF,EDSjBT,MAAM,GAAD,OAAIJ,GAAJ,OAAec,EAAf,YAAsBC,GAAM,CACtCC,OAAQ,WAFU,IAACF,EAAKC,G,OEVrB,SAASE,EAAT,GAAkD,IAA3BC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,SAK1C,OAJAC,qBAAU,WACRC,QAAQC,IAAIJ,GACZG,QAAQC,IAAIH,KACX,IAED,sBAAKI,UAAU,cAAf,UACE,8BACGL,EAAaM,QAEhB,8BACGN,EAAaO,OAEhB,qBAAKF,UAAU,WAAf,SACE,6BACGJ,EAASO,KAAI,SAAAC,GAAO,OACnB,6BACE,8BACGA,EAAQF,QAFJE,EAAQZ,c,MCZtB,SAASa,IACd,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOV,EAAP,KAAiBa,EAAjB,KACA,EAA4CH,mBAAS,GAArD,mBAAOI,EAAP,KAAuBC,EAAvB,KAEMC,EAAS,uCAAG,4BAAAhC,EAAA,sEACcF,EAAQ,SADtB,OACVmC,EADU,OAGhBL,EAASK,GAHO,2CAAH,qDAMTC,EAAY,uCAAG,4BAAAlC,EAAA,sEACcF,EAAQ,YADtB,OACbqC,EADa,OAGnBN,EAAYM,GAHO,2CAAH,qDAuBlB,OALAlB,qBAAU,WACRe,IACAE,MACC,IAGD,sBAAKd,UAAU,WAAf,UACE,oBAAIA,UAAU,iBAAd,SACGO,EAAMJ,KAAI,SAAAa,GAAI,OACb,qBACEhB,UAAU,iBADZ,UAIE,6BAAKgB,EAAKf,QACV,4BAAIe,EAAKd,OACT,wBACEe,KAAMD,EAAKxB,GACX0B,KAAK,SACLlB,UAAU,oBACVmB,QAAS,YAAe,IAAbC,EAAY,EAAZA,OACT/B,EAAW+B,EAAOH,MAClBT,EAASD,EAAMc,QAAO,SAAAL,GAAI,OAAIA,EAAKxB,MAAQ4B,EAAOH,UANtD,yBAWA,cAAC,IAAD,CACEA,KAAMD,EAAKxB,GACXQ,UAAU,oBACVmB,QAAS,YAAe,IAAbC,EAAY,EAAZA,OACTT,GAAmBS,EAAOH,OAE5BK,GAAE,iBAAYN,EAAKxB,IANrB,4BAfKwB,EAAKxB,SA4BhB,cAAC,IAAD,CACE+B,KAAK,iBACLC,OAAQ,WACN,IAAMC,EAAgBlB,EAAMc,QAAO,SAAAL,GAAI,OAAIA,EAAKxB,KAAOkB,KACjDgB,EAAoB9B,EAASyB,QAAO,SAAAjB,GAAO,OAAIA,EAAQd,SAAWoB,KACxE,OAAO,cAAChB,EAAD,CACLC,aAAc8B,EAAc,GAC5B7B,SAAU8B,U,MC9DPC,MAhBf,WACE,OACE,sBAAK3B,UAAU,MAAf,UACE,cAAC,IAAD,CACEuB,KAAK,IACLD,GAAG,WAEL,cAAC,IAAD,CACEC,KAAK,SACLK,UAAWvB,QCNnBwB,IAASL,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.fbf0be00.chunk.js","sourcesContent":["export const BASE_URL = 'https://bloggy-api.herokuapp.com/';\n\nexport const getData = async(endPoint) => {\n  const response = await fetch(`${BASE_URL}${endPoint}`);\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  const result = await response.json();\n\n  return result;\n};\n\nexport const remove = (url, id) => {\n  return fetch(`${BASE_URL}${url}/${id}`, {\n    method: 'DELETE',\n  });\n}\n\nexport const post = (url, body) => {\n  return fetch(`${BASE_URL}${url}`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(body),\n  });\n}","import { remove, post } from './api';\n\nconst endPoint = 'posts';\n\nexport const deletePost = (postId) => {\n  return remove(endPoint, postId);\n}\n\nexport const addPost = (body) => {\n  return post(endPoint, body)\n    .then(response => response.json())\n    .then(result => result.data);\n}","import { useEffect } from \"react\";\n\n\nexport function DetailsPost({ selectedPost, comments }) {\n  useEffect(() => {\n    console.log(selectedPost)\n    console.log(comments)\n  }, [])\n  return (\n    <div className=\"DetailsPost\">\n      <div>\n        {selectedPost.title}\n      </div>\n      <div>\n        {selectedPost.body}\n      </div>\n      <div className=\"comments\">\n        <ul>\n          {comments.map(comment => (\n            <li key={comment.id}>\n              <div>\n                {comment.body}\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import { getData, post } from '../../api/api';\nimport { deletePost, addPost} from '../../api/posts';\nimport { useEffect, useState } from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport { DetailsPost } from '../DetailsPost'\nimport './PostList.css';\n\nexport function PostList() {\n  const [posts, setPosts] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  const loadPosts = async() => {\n    const postsFromServer = await getData('posts');\n\n    setPosts(postsFromServer);\n  };\n\n  const loadComments = async() => {\n    const commentsFromServer = await getData('comments');\n\n    setComments(commentsFromServer);\n  };\n\n  const addNewPost = () => {\n    const newPost = {\n      title: \"Optio molestias id quia eum\",\n      body: \"Quo et expedita modi cum officia vel magni doloribus qui repudiandae vero nisi sit quos veniam quod sed accusamus veritatis error\"\n    };\n\n    addPost(newPost)\n      .then((result) => {\n        setPosts(currentList => [...currentList, result]);\n      });\n  };\n\n  useEffect(() => {\n    loadPosts();\n    loadComments();\n  }, []);\n  \n  return (\n    <div className=\"PostList\">\n      <ul className=\"PostList__list\">\n        {posts.map(post => (\n          <li\n            className=\"PostList__item\" \n            key={post.id}\n          >\n            <h2>{post.title}</h2>\n            <p>{post.body}</p>\n            <button\n              name={post.id}\n              type=\"button\"\n              className=\"PostList__btn btn\"\n              onClick={({target}) => {\n                deletePost(target.name)\n                setPosts(posts.filter(post => post.id !== +target.name));\n              }}\n            >\n              Delete post\n            </button>\n            <Link\n              name={post.id}\n              className=\"PostList__btn btn\"\n              onClick={({target}) => {\n                setSelectedPostId(+target.name)\n              }}\n              to={`/posts/${post.id}`}\n            >\n              Post details\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <Route\n        path=\"/posts/:postId\"\n        render={() => {\n          const prepearedPost = posts.filter(post => post.id === selectedPostId);\n          const prepearedComments = comments.filter(comment => comment.postId === selectedPostId);\n          return <DetailsPost \n            selectedPost={prepearedPost[0]} \n            comments={prepearedComments} \n          />\n        }}\n      >\n      </Route>\n    </div>\n  );\n}\n","import { Route, Redirect} from 'react-router-dom';\nimport { PostList } from './components/PostList';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Redirect\n        path=\"/\"\n        to=\"/posts\"\n      />\n      <Route \n        path=\"/posts\"\n        component={PostList}\n      >\n      </Route>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}